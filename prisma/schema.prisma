generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String         @id @default(cuid())
  clerkUserId   String?        @unique
  email         String
  adventure     Adventure[]
  request       Request[]
  dungeonMaster DungeonMaster?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model DungeonMaster {
  id        String      @id @default(cuid())
  user      User        @relation(fields: [userId], references: [id])
  userId    String      @unique
  adventure Adventure[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Adventure {
  id              String          @id @default(cuid())
  title           String
  description     String
  system          String
  format          String
  imageUrl        String?
  sessions        Session[]
  requests        Request[]
  players         User[]
  dungeonMaster   DungeonMaster   @relation(fields: [dungeonMasterId], references: [id])
  dungeonMasterId String
  status          AdventureStatus @default(WAITING_FOR_PLAYERS)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Session {
  id          String    @id @default(cuid())
  title       String
  date        DateTime
  duration    String
  location    String
  adventure   Adventure @relation(fields: [adventureId], references: [id])
  adventureId String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Request {
  id          String        @id @default(cuid())
  user        User          @relation(fields: [userId], references: [id])
  userId      String
  adventure   Adventure     @relation(fields: [adventureId], references: [id])
  adventureId String
  status      RequestStatus @default(PENDING)

  createdAt DateTime @default(now())
}

enum RequestStatus {
  PENDING
  ACCEPTED
  REJECTED
}

enum AdventureStatus {
  WAITING_FOR_PLAYERS
  ACTIVE
  PAUSED
}
